import java.util.*;


public class Solution {
    /**
     * longest common substring
     * @param str1 string字符串 the string
     * @param str2 string字符串 the string
     * @return string字符串
     */
    public String LCS (String str1, String str2) {
        // write code here
        int len1 = str1.length(), len2 = str2.length();
        int[][]dp = new int[len1 + 1][len2 + 1];
        int max = 0, index = 0;
        for(int i = 0; i < len1; i++) {
            for(int j = 0; j< len2; j++) {
                if(str1.charAt(i) == str2.charAt(j)){
                    dp[i + 1][j + 1] = dp[i][j] + 1;
                    if(dp[i + 1][j + 1] > max) {
                        max = dp[i + 1][j + 1];
                        index = i;
                    }
                }
            }
        }
        //java String的substring
        //子字符串从指定的beginIndex开始并延伸到索引endIndex - 1处的字符。
        //因此子字符串的长度是endIndex-beginIndex
        return max == 0 ? "-1" : str1.substring(index + 1 - max, index + 1);
    }
}